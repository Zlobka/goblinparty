---
interface Props {
    enname: string;
    runame: string;
    prints: string;
    illustrated: string;
    flavor: string;
    link: string;
    other: string;
    thanks: string;
    img: string;
}

const {
    img,
    enname,
    runame,
    prints,
    illustrated,
    flavor,
    thanks,
    link,
    other,
} = Astro.props;
---

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const images = document.querySelectorAll(".image");
        const expandedImage = document.getElementById("expanded-image");
        const expandedImageSrc = document.getElementById("expanded-image-src");

        if (expandedImage && expandedImageSrc) {
            images.forEach((image) => {
                image.addEventListener("click", function () {
                    expandedImage.style.display = "block";
                    const src = image.getAttribute("src");
                    if (src) {
                        expandedImageSrc.setAttribute("src", src);
                    }
                });
            });

            expandedImage.addEventListener("mousedown", function () {
                expandedImage.style.display = "none";
            });
        }
    });
</script>

<div class="container">
    <div class="heading">
        <h1>{enname}</h1>
        <h2>{runame}</h2>
    </div>
    <img class="image" src={img} alt="#" width="425" height="595" />
    <div class="text">
        {
            prints && (
                <p>
                    <b>Издание:</b>&nbsp{prints}
                </p>
            )
        }
        {
            illustrated && (
                <p>
                    <b>Иллюстратор:</b>&nbsp
                    <a href={link} target="blank">
                        {illustrated}
                    </a>
                </p>
            )
        }
        {
            flavor && (
                <div>
                    <b>Художественный текст:</b>&nbsp;
                    <i>
                        {flavor.split("\n").map((paragraph, index) => (
                            <p data-key={index}>{paragraph}</p>
                        ))}
                    </i>
                </div>
            )
        }
        <p>{thanks}</p>
        {
            other.split("\n").map((paragraph, index) => (
                <p data-key={index} class="indented-paragraph">
                    {paragraph}
                </p>
            ))
        }

        <slot />
    </div>
    <div id="expanded-image" class="expanded-image">
        <img
            id="expanded-image-src"
            class="expanded-image-content"
            src=""
            alt="Увеличенное изображение"
        />
    </div>
</div>

<style>
    .heading h1 {
        margin-top: 10px;
        margin-bottom: -10px;
    }

    .heading h1,
    .heading h2 {
        text-align: center;
    }

    .container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 20px;
        max-width: 800px;
        margin: 0 auto;
        margin-bottom: -10px;
    }

    .image {
        max-width: 100%;
        height: auto;
        margin: 0 auto;
        cursor: pointer;
    }

    .heading {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-bottom: -30px;
    }

    .text {
        margin: 0em 1em;
        text-align: justify;
    }

    .indented-paragraph {
        text-indent: 2em;
    }

    .expanded-image {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
    }

    .expanded-image-content {
        display: flex;
        justify-content: center;
        align-items: center;
        object-fit: contain;
        width: 100%;
        height: 100%;
    }

    @media (min-width: 800px) {
        .container {
            grid-template-columns: 1fr 1fr;
        }

        .image {
            grid-column: 1 / 2;
            grid-row: 1 / 4;
            margin: 10px 1em;
        }

        .heading {
            grid-column: 2 / 3;
            grid-row: 1 / 2;
        }

        .text {
            margin: 0em 1em;
            grid-column: 2 / 3;
            grid-row: 2 / 3;
        }

        slot {
            grid-column: 1 / -1;
            grid-row: 3 / 4;
        }
    }
</style>
