---
import Layout from "../../../layouts/Layout.astro";
import Pagetitle from "../../../layouts/Pagetitle.astro";
import { tokens } from "../../../data/tokens"; // Импортируем массив токенов

// Параметры для пагинации
const itemsPerPage = 30;
const totalPages = Math.ceil(tokens.length / itemsPerPage);
---

<Layout title="Tokens">
    <div class="search-container">
        <div class="search-header">
            <Pagetitle pagetitle="Токены" />
            <input
                id="searchInput"
                type="text"
                placeholder="Поиск по названию..."
                class="search-input"
            />
        </div>
    </div>

    <div
        class="image-gallery"
        id="tokensGallery"
        data-tokens={JSON.stringify(tokens)}
        data-items-per-page={itemsPerPage}
        data-total-pages={totalPages}
    >
        <div class="image-row" id="imageRow">
            <!-- Элементы существ будут добавляться динамически -->
        </div>
    </div>

    <!-- Пагинация -->
    <div class="pagination">
        <button
            class="prev-page slider-btn"
            id="prevPageButton"
            disabled="true"
        >
            &lt;
        </button>
        <span id="pageInfo">Страница 1 из {totalPages}</span>
        <button
            class="next-page slider-btn"
            id="nextPageButton"
            disabled="true"
        >
            &gt;
        </button>
    </div>
</Layout>

<script type="module">
    document.addEventListener("DOMContentLoaded", () => {
        const searchInput = document.getElementById("searchInput");
        const imageRow = document.getElementById("imageRow");
        const prevPageButton = document.getElementById("prevPageButton");
        const nextPageButton = document.getElementById("nextPageButton");
        const pageInfo = document.getElementById("pageInfo");

        // Данные передаются через атрибут data-tokens
        const tokens = JSON.parse(
            document
                .getElementById("tokensGallery")
                .getAttribute("data-tokens"),
        );
        let filteredTokens = tokens;
        let currentPage = 1;

        const itemsPerPage = parseInt(
            document
                .getElementById("tokensGallery")
                .getAttribute("data-items-per-page"),
        );
        const totalPages = parseInt(
            document
                .getElementById("tokensGallery")
                .getAttribute("data-total-pages"),
        );

        // Функция для рендера токенов
        function renderTokens() {
            imageRow.innerHTML = ""; // Очищаем текущие элементы
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const tokensToDisplay = filteredTokens.slice(startIndex, endIndex);

            // Добавляем токены на страницу
            if (tokensToDisplay.length > 0) {
                tokensToDisplay.forEach((token) => {
                    const tokenElement = document.createElement("div");
                    tokenElement.classList.add("image-item");
                    tokenElement.innerHTML = `
            <a href="${token.link}">
              <p>${token.enname}</p>
            </a>
            <a href="${token.link}">
              <img src="${token.img}" alt="${token.enname}" width="250" height="350">
            </a>
          `;
                    imageRow.appendChild(tokenElement);
                });
            } else {
                imageRow.innerHTML = "<p>Токены не найдены.</p>";
            }

            // Обновляем информацию о пагинации
            pageInfo.innerHTML = `Страница ${currentPage} из ${totalPages}`;
            prevPageButton.disabled = currentPage === 1;
            nextPageButton.disabled = currentPage === totalPages;

            // Прокручиваем страницу наверх
            window.scrollTo(0, 0);
        }

        // Функция фильтрации
        searchInput.addEventListener("input", function () {
            const query = searchInput.value.toLowerCase();
            filteredTokens = tokens.filter((token) =>
                token.enname.toLowerCase().includes(query),
            );

            // Обновляем текущую страницу после фильтрации
            currentPage = 1;
            renderTokens();
        });

        // Обработчики пагинации
        prevPageButton.addEventListener("click", () => {
            if (currentPage > 1) {
                currentPage--;
                renderTokens();
            }
        });

        nextPageButton.addEventListener("click", () => {
            if (currentPage < totalPages) {
                currentPage++;
                renderTokens();
            }
        });

        // Инициализация отображения
        renderTokens();
    });
</script>

<style>
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }

    .pagination button {
        padding: 10px 20px;
        background-color: #ccc;
        border: 2px solid black;
        cursor: pointer;
        border-radius: 10px;
    }

    .pagination button:disabled {
        background-color: #ddd;
        cursor: not-allowed;
    }

    .pagination button:hover {
        background-color: rgba(
            117,
            112,
            112,
            0.8
        ); /* Более насыщенный цвет кнопки при наведении */
        transform: scale(1.1); /* Легкое увеличение */
    }
    .slider-btn {
        position: fixed;
        top: 50%; /* Центр по высоте */
        transform: translateY(-50%); /* Выравнивание по центру */
        width: 50px;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ccc;
        border: 2px solid black;
        border-radius: 50%;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
        z-index: 1000; /* Поверх контента */
    }

    .slider-btn:hover {
        background-color: rgba(117, 112, 112, 0.8);
        transform: translateY(-50%) scale(1.2); /* Увеличение при наведении */
    }

    .slider-btn:disabled {
        background-color: #ddd;
        cursor: not-allowed;
    }

    .prev-page {
        left: 10px; /* Отступ от левого края */
    }

    .next-page {
        right: 10px; /* Отступ от правого края */
    }

    /* Скрываем нижнюю часть пагинации */
    .pagination span {
        display: none;
    }
</style>
